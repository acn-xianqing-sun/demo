<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.newtest.OrderMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.newtest.Order">
    <id column="orderId" jdbcType="INTEGER" property="orderid" />
    <result column="clientId" jdbcType="VARCHAR" property="clientid" />
    <result column="orderDate" jdbcType="TIMESTAMP" property="orderdate" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="commont" jdbcType="VARCHAR" property="commont" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orderId, clientId, orderDate, quantity, commont
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.newtest.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from newtest.order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from newtest.order
    where orderId = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from newtest.order
    where orderId = #{orderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.newtest.OrderExample">
    delete from newtest.order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.newtest.Order">
    insert into newtest.order (orderId, clientId, orderDate, 
      quantity, commont)
    values (#{orderid,jdbcType=INTEGER}, #{clientid,jdbcType=VARCHAR}, #{orderdate,jdbcType=TIMESTAMP}, 
      #{quantity,jdbcType=INTEGER}, #{commont,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.newtest.Order">
    insert into newtest.order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        orderId,
      </if>
      <if test="clientid != null">
        clientId,
      </if>
      <if test="orderdate != null">
        orderDate,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="commont != null">
        commont,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="clientid != null">
        #{clientid,jdbcType=VARCHAR},
      </if>
      <if test="orderdate != null">
        #{orderdate,jdbcType=TIMESTAMP},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="commont != null">
        #{commont,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.newtest.OrderExample" resultType="java.lang.Long">
    select count(*) from newtest.order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update newtest.order
    <set>
      <if test="record.orderid != null">
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.clientid != null">
        clientId = #{record.clientid,jdbcType=VARCHAR},
      </if>
      <if test="record.orderdate != null">
        orderDate = #{record.orderdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.commont != null">
        commont = #{record.commont,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update newtest.order
    set orderId = #{record.orderid,jdbcType=INTEGER},
      clientId = #{record.clientid,jdbcType=VARCHAR},
      orderDate = #{record.orderdate,jdbcType=TIMESTAMP},
      quantity = #{record.quantity,jdbcType=INTEGER},
      commont = #{record.commont,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.newtest.Order">
    update newtest.order
    <set>
      <if test="clientid != null">
        clientId = #{clientid,jdbcType=VARCHAR},
      </if>
      <if test="orderdate != null">
        orderDate = #{orderdate,jdbcType=TIMESTAMP},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="commont != null">
        commont = #{commont,jdbcType=VARCHAR},
      </if>
    </set>
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.newtest.Order">
    update newtest.order
    set clientId = #{clientid,jdbcType=VARCHAR},
      orderDate = #{orderdate,jdbcType=TIMESTAMP},
      quantity = #{quantity,jdbcType=INTEGER},
      commont = #{commont,jdbcType=VARCHAR}
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
</mapper>